{
  "version": 3,
  "sources": ["../../../../node_modules/@braintree/sanitize-url/index.js"],
  "sourcesContent": ["'use strict';\n\nvar invalidPrototcolRegex = /^(%20|\\s)*(javascript|data)/im;\nvar ctrlCharactersRegex = /[^\\x20-\\x7E]/gmi;\nvar urlSchemeRegex = /^([^:]+):/gm;\nvar relativeFirstCharacters = ['.', '/']\n\nfunction isRelativeUrl(url) {\n  return relativeFirstCharacters.indexOf(url[0]) > -1;\n}\n\nfunction sanitizeUrl(url) {\n  if (!url) {\n    return 'about:blank';\n  }\n\n  var urlScheme, urlSchemeParseResults;\n  var sanitizedUrl = url.replace(ctrlCharactersRegex, '').trim();\n\n  if (isRelativeUrl(sanitizedUrl)) {\n    return sanitizedUrl;\n  }\n\n  urlSchemeParseResults = sanitizedUrl.match(urlSchemeRegex);\n\n  if (!urlSchemeParseResults) {\n    return 'about:blank';\n  }\n\n  urlScheme = urlSchemeParseResults[0];\n\n  if (invalidPrototcolRegex.test(urlScheme)) {\n    return 'about:blank';\n  }\n\n  return sanitizedUrl;\n}\n\nmodule.exports = {\n  sanitizeUrl: sanitizeUrl\n};\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,QAAI,wBAAwB;AAC5B,QAAI,sBAAsB;AAC1B,QAAI,iBAAiB;AACrB,QAAI,0BAA0B,CAAC,KAAK,GAAG;AAEvC,aAAS,cAAc,KAAK;AAC1B,aAAO,wBAAwB,QAAQ,IAAI,CAAC,CAAC,IAAI;AAAA,IACnD;AAEA,aAAS,YAAY,KAAK;AACxB,UAAI,CAAC,KAAK;AACR,eAAO;AAAA,MACT;AAEA,UAAI,WAAW;AACf,UAAI,eAAe,IAAI,QAAQ,qBAAqB,EAAE,EAAE,KAAK;AAE7D,UAAI,cAAc,YAAY,GAAG;AAC/B,eAAO;AAAA,MACT;AAEA,8BAAwB,aAAa,MAAM,cAAc;AAEzD,UAAI,CAAC,uBAAuB;AAC1B,eAAO;AAAA,MACT;AAEA,kBAAY,sBAAsB,CAAC;AAEnC,UAAI,sBAAsB,KAAK,SAAS,GAAG;AACzC,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AAAA,MACf;AAAA,IACF;AAAA;AAAA;",
  "names": []
}
